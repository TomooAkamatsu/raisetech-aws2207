version: 2.1

orbs:
  terraform: circleci/terraform@3.1.0
  terraform-tflint: hqo/terraform@1.0.3
  ansible: orbss/ansible-playbook@0.0.5
  aws-cli: circleci/aws-cli@3.1.3
  ruby: circleci/ruby@1.8.0

commands:
  install-tflint:
    description: "Install TFLint"
    steps:
      - run:
          command: wget -P /tmp https://github.com/terraform-linters/tflint/releases/download/v0.38.1/tflint_linux_amd64.zip && unzip /tmp/tflint_linux_amd64.zip -d /usr/local/bin

jobs:
  check_by_tflint:
    executor: terraform/default
    steps:
      - checkout
      - install-tflint
      - run:
          name: tflint
          command: |
            cd lecture12/terraform/dev && terraform init
            tflint --init && tflint
  get_resource_info:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: get resource info
          command: |
            aws rds describe-db-instances --filters "Name=db-instance-id,Values=terraform-db-instance" --query 'DBInstances[].[Endpoint.Address]' --output text | xargs -I{} echo "export DB_ENDPOINT={}" >> $BASH_ENV
            source $BASH_ENV
            echo ${DB_ENDPOINT}

  executor-ansible:
    executor: ansible/default
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - b5:a8:cb:13:7d:b6:19:9b:5f:53:e4:e8:ca:75:41:e4
      - ansible/install:
          version: 2.10.3
      - ansible/playbook:
          playbook: lecture12/ansible/playbook.yml
          playbook-options: "-u ec2-user -i lecture12/ansible/inventory --private-key ~/.ssh/udemysample.pem"

workflows:
  deploy_infrastructure:
    jobs:
      - terraform/fmt:
          checkout: true
          context: terraform
          path: lecture12/terraform/dev
      - terraform/validate:
          checkout: true
          context: terraform
          path: lecture12/terraform/dev
          requires:
            - terraform/fmt
      - check_by_tflint:
          requires:
            - terraform/validate
      - terraform/plan:
          checkout: true
          context: terraform
          path: lecture12/terraform/dev
          persist-workspace: true
          requires:
            - check_by_tflint
      - terraform/apply:
          attach-workspace: true
          context: terraform
          path: lecture12/terraform/dev
          filters:
            branches:
              only: main
          requires:
            - terraform/plan
      - get_resource_info:
          requires:
            - terraform/apply
      - executor-ansible:
          requires:
            - get_resource_info
